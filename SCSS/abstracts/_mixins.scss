@use './colors' as *;

@mixin flex($direct: column, $justify: center, $align: center, $gap: 1.6rem) {
    display: flex;
    flex-direction: $direct;
    justify-content: $justify;
    align-items: $align;
    gap: $gap;
}

@mixin container($p-inline: 3.2rem, $p-block: 0) {
    padding-inline: $p-inline;
    padding-block: $p-block;

    @include breakpoint(desktop) {
        padding-inline: 6vw;
    }
}

@mixin btn($clr, $bg-clr, $clr-hvr: $bg-clr, $bg-hvr: $clr) {
    color: $clr;
    background-color: $bg-clr;
    border: 3px solid $bg-clr;

    &:hover {
        color: $clr-hvr;
        background-color: $bg-hvr;
        border-color: $clr-hvr;
    }
}

@mixin fixed($top: 0, $right: 0, $bottom: 0, $left: 0) {
    position: fixed;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin background($left: -3.2rem, $right: auto, $top: 22%, $t-right: 100vw, $b-right: 100vw, $b-left: 0, $width: 85%, $height: 100%) {
    &::after {
        content: '';
        display: block;
        position: absolute;
        bottom: 0;
        left: $left;
        right: $right;
        z-index: -1;
        background-color: $clr-soft-blue;
        top: $top;
        width: $width;
        height: $height;
        border-radius: 0 $t-right $b-right $b-left;
    }
}

@mixin breakpoint ($size) {
    @if $size ==mobile {
        @media (max-width:40.999em) {
            @content;
        }
    }

    @else if $size ==desktop {
        @media (min-width:41em) {
            @content;
        }
    }
}